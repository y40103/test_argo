apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-config
  namespace: dev
data:
  MINIO_ROOT_USER: "thinktron"
  MINIO_ROOT_PASSWORD: "Od2gSd4yUGVLP6tWl4XmYAoncX/NV7tR8RZw1jXiyjw="
  MINIO_BROWSER_REDIRECT_URL: "{{ .Values.NODE.PROTOCOL }}://{{ .Values.NODE.DOMAIN }}/minio/"
  MINIO_CONSOLE_SUBPATH: "/minio/"

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mingde-bucket-policy
  namespace: dev
data:
  minio-mingde-r-policy.json: |
{{ (.Files.Get "config/minio-mingde-r-policy.json") | indent 4 }}



  minio-mingde-rw-policy.json: |
{{ (.Files.Get "config/minio-mingde-rw-policy.json") | indent 4 }}
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: minio
  namespace: dev
spec:
  serviceName: "svc-minio-ui"
  replicas: 1
  selector:
    matchLabels:
      app: minio
  template:
    metadata:
      labels:
        app: minio
    spec:
      containers:
        - name: minio
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: minio-config
          image: quay.io/minio/minio:latest
          command:
            - /bin/bash
            - -c
          args:
            - minio server /data --console-address :9001
          volumeMounts:
            - mountPath: /data
              name: minio-volume # Corresponds to the `spec.volumes` Persistent Volume
            - name: mingde-bucket-policy
              mountPath: /tmp/minio-mingde-r-policy.json
              subPath: minio-mingde-r-policy.json
            - name: mingde-bucket-policy
              mountPath: /tmp/minio-mingde-rw-policy.json
              subPath: minio-mingde-rw-policy.json
          lifecycle:
            postStart:
              exec:
                command: [ "/bin/sh", "-c", "
                  sleep 5;
                  /usr/bin/mc config host add rootuser http://minio-0.svc-minio-ui.dev.svc.cluster.local:9000 thinktron Od2gSd4yUGVLP6tWl4XmYAoncX/NV7tR8RZw1jXiyjw=;
                  /usr/bin/mc mb rootuser/mingde;
                  mc admin policy create rootuser mingde-rw /tmp/minio-mingde-rw-policy.json;
                  mc admin policy create rootuser mingde-r /tmp/minio-mingde-r-policy.json;
                  exit 0;
                " ]
      volumes:
        - name: minio-volume
          persistentVolumeClaim:
            claimName: minio-claim
        - name: mingde-bucket-policy
          configMap:
            name: mingde-bucket-policy

---
apiVersion: v1
kind: Service
metadata:
  name: svc-minio-ui
  namespace: dev
spec:
  selector: #
    app: minio
  type: NodePort
  ports:
    - port: 9001 #service port
      protocol: TCP
      targetPort: 9001  #pod port
      nodePort: 30005 # 可不指定 會預設自動分配於 30000-32767之間
---

apiVersion: v1
kind: Service
metadata:
  name: svc-minio
  namespace: dev
spec:
  selector: #
    app: minio
  type: NodePort
  ports:
    - port: 9000 #service port
      protocol: TCP
      targetPort: 9000  #pod port
      nodePort: 30006 # 可不指定 會預設自動分配於 30000-32767之間

---

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: minio-claim
  namespace: dev
spec:
  storageClassName: local-storage
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  selector:
    matchLabels:
      app: minio