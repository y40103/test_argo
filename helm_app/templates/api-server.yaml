apiVersion: v1
kind: ConfigMap
metadata:
  name: md-api-server-config
  namespace: dev
data:
  PREFECT_API_DATABASE_CONNECTION_URL: "postgresql+asyncpg://{{ .Values.POSTGRES.POSTGRES_USER }}:{{ .Values.POSTGRES.POSTGRES_PASSWORD }}@{{ .Values.POSTGRES.POSTGRES_HOST }}:{{ .Values.POSTGRES.POSTGRES_PORT }}/prefect"
  PROTOCOL: "http"
  NODE_HOST: "{{ .Values.NODE.API_ROOT_URL }}"
  JWT_SECRET_KEY: "191ad0e7406e2ca912a37b354d535a15e653399738e093645230972724912a7ff2d8352607b304f7e7df9349839f490e6a6e510dd2ed81c783d5ca7ca299da52"
  POSTGRES_USERNAME: "{{ .Values.POSTGRES.POSTGRES_USER }}"
  POSTGRES_PASSWORD: "{{ .Values.POSTGRES.POSTGRES_PASSWORD }}"
  POSTGRES_DATABASE: "{{ .Values.POSTGRES.POSTGRES_DEFAULT_DB }}"
  POSTGRES_HOST: "{{ .Values.POSTGRES.POSTGRES_HOST }}"
  REDIS_HOST: "{{ .Values.REDIS.REDIS_HOST }}"
  MINIO_ACCESS_KEY: "thinktron"
  MINIO_SECRET_KEY: "Od2gSd4yUGVLP6tWl4XmYAoncX/NV7tR8RZw1jXiyjw="
  MINIO_HOST: "http://minio-0.svc-minio-ui.dev.svc.cluster.local:9001"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: md-api-server
  namespace: dev
spec:
  selector:
    matchLabels:
      app: md-api-server
  replicas: 1
  template: # pod template
    metadata:
      labels:
        app: md-api-server
    spec:
      containers:
        - name: md-api-server
          image: y40103/mingde_main:latest
          command: [ "/usr/bin/bash","-c","/usr/local/bin/uvicorn __init__:app --root-path /main  --host 0.0.0.0 --port 8000 --timeout-keep-alive 300"]
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: md-api-server-config

---
apiVersion: v1
kind: Service
metadata:
  name: svc-md-api # service name
  namespace: dev # namspace
spec:
  selector: # label選擇器,用於確定 service代理哪些Pod
    app: md-api-server # label key:value
  #若開啟 , 同一個IP的請求會分到 固定的pod上
  type: NodePort
  ports: # port基本資訊
    - port: 8000 # service port
      protocol: TCP
      targetPort: 8000 # pod port
      nodePort: 30003
